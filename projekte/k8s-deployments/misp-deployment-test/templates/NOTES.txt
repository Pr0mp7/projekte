1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "misp-test.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "misp-test.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "misp-test.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "misp-test.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Default MISP admin credentials:
   Username: {{ .Values.misp.config.admin.email }}
   Password: {{ .Values.misp.config.admin.password }}

3. To check the status of your MISP deployment:
   kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "misp-test.name" . }}"

4. To view MISP logs:
   kubectl logs --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "misp-test.name" . }}" -f

5. Important notes for RKE2 testing environment:
   - This is a simplified configuration for testing purposes only
   - Database and Redis are configured with minimal persistence
   - Security settings are relaxed for easier testing
   - For production deployment, review and harden all security configurations

{{- if .Values.redis.enabled }}
6. Redis connection details:
   Host: {{ .Release.Name }}-redis-master
   Port: 6379
   {{- if .Values.redis.auth.enabled }}
   Password: Run 'kubectl get secret --namespace {{ .Release.Namespace }} {{ .Release.Name }}-redis -o jsonpath="{.data.redis-password}" | base64 --decode'
   {{- end }}
{{- end }}

{{- if .Values.mariadb.enabled }}
7. MariaDB connection details:
   Host: {{ .Release.Name }}-mariadb
   Database: {{ .Values.mariadb.auth.database }}
   Username: {{ .Values.mariadb.auth.username }}
   Password: Run 'kubectl get secret --namespace {{ .Release.Namespace }} {{ .Release.Name }}-mariadb -o jsonpath="{.data.mariadb-password}" | base64 --decode'
{{- end }}